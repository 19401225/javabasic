- 새로운 선생님이 오셨다 (77년생 / 13살 더 많으신)
- 이름 : 김덕우 선생님 (마포구 성산동)
- 이메일 : kdw335552@nate.com
- 연락처 : 010 7979 5723

3월 초에 중간 프로젝트 진행 예정 
(웹사이트 구성, 실제 사이트 구현)

데이터를 처리할 때 웹과 관련된 내용으로 주고 받는다.
데이터를 받아서 서버들로 전달한다. 이 전달할 때 웹으로 전달하게 된다.
interface. 사전에 서버에서 어떤 특정 기능들을 구현해놓은 함수
데이터 처리를 위해. 사이트에서 이러한 interface를 제공하고 있다.

서치, 크롤링, 프로그램으로 
반환한 내용을 바탕으로 수집

웹과 관련된 내용을 알아야 데이터를 주고 받을 수 있다.
빅데이터, AI를 어디서 분석할까?
웹사이트 브라우저는 사용할 때 특별히 설치하거나 할 게 없다. 바로 사용하면 된다.
자바 기반의 웹 어플리케이션 JSP를 가장 많이 사용한다.

[조구성] 총 18명
 인원 : 3 ~ 4명
 조장 : ㅇㅇㅇ
 조이름 : ㅇㅇㅇ
 오늘 수업 끝날 때까지...

JSP, 
Spring, 
Spring Boot
개발을 위한 라이브러리를 불러와서(코드가 간결) 사용하는데, Spring으로 편리하게 사용할 수 있다. 

최신 버전은 라이센스 비용을 지불해야 하기 때문에 권장하는 오라클, 자바 버전이 있다.

웹은 로그인 관련 내용들을 많이 배울 거야 (세션 정보 받고, 회원 정보 수정하고 등)
UML, 각 함수나 어플리케이션을 개발할 때 
     로그인 할 때 id,pw가 필요한데 입력되면 그에 대한 반응을 하는 어플리케이션을 만들고
     프로그램 개발을 할 때,DML

오라클은 자바 기반으로 작동하기 때문에 자바를 찾는다.
JDK 개발용 JDR 구동용
자바 머신이 설치되면서 시스템과 연동이 된다.
자바는 어디서도 개발하는데 문제가 없다.




html,css을 1주일 동안 배우고,
Javascript는 하지는 않았고,

Java,
SQL(Oracle, MySQL, MariaDB),


world wide web (www)

PHP, html, SQL


RDBMS 관계형 데이터베이스 

Java Code 하다가 Error 코드는 어떻게 처리했나요?
(Error 코드는 자세히 살펴봐야 한다.)


실제 빅데이터 분석은 Python을 사용한다.



# 자바를 설치해보자. 
https://www.oracle.com/java/technologies/downloads/#java8-windows 에서
'jdk-8u311-windows-x64.exe' 를 다운로드 후 실행
설치된 버전 확인은 cmd  >  java -version


# 오라클 DB는 
https://www.oracle.com/database/technologies/xe18c-downloads.html 에서
압축 풀고, 'setup.exe' 실행하여 설치진행
혹시, 완료 직전에 롤백이 된다면?
'앱 및 제거'에서 'oracle'검색 후 기존에 있던 11c버전을 삭제 후 재설치 진행


# 이클립스 설치는
https://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/2021-12/R/eclipse-jee-2021-12-R-win32-x86_64.zip



윈도우 + R > sysdm.cpl 입력 (시스템 속성) > 고급탭 > 아래 '환변경수' 
OS 프로그램 
OS 시스템이 사용할 수 있도록 자바의 환경 변수를 설정하는 것을 의미함. 

C:\Program Files\Java

jdk1.8.0_311 개발과 작업을 위한 
jre1.8.0_311 코드를 구동시켜주는,

환경 변수 > 시스템 변수 > 새로만들기 
변수 이름 : JAVA_HOME
변수값 : C:\Program Files\Java\jdk1.8.0_311

환경 변수 > 시스템 변수 > Path 편집
새로 만들기 %JAVA_HOME%\bin\  확인

cmd > cd %JAVA_HOME% 입력 
echo %path%    (echo 는 화면에 출력해주는 명령어)

# 프로젝트를 만들자 
C:\  'myJSP' 폴더 생성

# 위에 설치한 이클립스 폴더에서 eclipse.exe 파일을 바탕화면에 바로가기
'eclipseJSP'로 이름을 변경하자.
실행 후 Workspace : C:\myJSP 로 수정하고, 아래 기본설정으로 체크해주자.

# 위에 오라클 설치가 완료되었으면, 기본적인 환경설정을 하도록 하자.
  우선 hr 계정을 사용할 수 있도록 하겠다. 'sqlplus'를 실행하고 관리자 계정인 'system' 계정으로 로그인하자
cmd > sqlplus 입력 
사용자명 : system
비밀번호 입력 : 0000 (화면에 보이지는 않음)
 
 - 처음에는 localhost:1521 이 상태이기 때문에 세션을 변경해야 한다.
 - alter는 수정, XEPDB = extension PDB
 - 'hr'이라는 연습용 계정이 존재한다. 기본적으로 lock이 걸려있어서 해제 후 연결해줘야 한다.
 - 이후, 'hr'계정의 비밀번호를 설정해줘야 한다. (identified by 원하는비밀번호)
 - 이제 권한을 부여하자. grant create session to 계정명;
 - connect 계정명/패스워드@localhost:1521/XEPDB1;
                     (:컬럼은 포트번호를 의미한다. 오라클의 Port_Number:1521임을 기억하자.)

SQL> alter session set container=XEPDB1;    세션이 변경되었습니다.
     alter user hr account unlock;          사용자가 변경되었습니다.
     alter user hr identified by hr;        사용자가 변경되었습니다.
     grant create session to hr;            권한이 부여되었습니다. (이제 hr계정으로 로그인할 수 있다.)
     connect hr/hr@localhost:1521/XEPDB1;   연결되었습니다.

     select * from tab;     음 결과가 나왔다.
                            우리는 JSP에서 사용할 계정과 DB를 설정할 것이다.
                            다시 관리자 계정으로 돌아가자
     connect system/0000@localhost:1521/XEPDB1;   연결되었습니다.

앞으로 사용할 'myjsp'라는 계정을 생성하도록 하자.
    (create user 사용할아이디 identified by 비밀번호;)

     create user myjsp identified by myjsp;     사용자가 생성되었습니다.
     grant create session to myjsp;             권한이 부여되었습니다.
     connect myjsp/myjsp@localhost:1521/XEPDB1; 연결되었습니다.
     select * from tab;                         선택된 레코드가 없습니다. (아무것도 없겠지)

     select * from all_users;
     select * from all_users where username='MYJSP';
     show user;         현재 사용자가 누구인지 확인

계정은 생성됐으니 테이블을 생성해보자.
     create table std (
         age int
     );                             1행에 오류, 권한이 불충분합니다. (테이블 생성 권한이 없네)
                                    권한을 부여하자.
     alter session set container=XEPDB1;        세션이 변경되었습니다.
     grant connect, resource to myjsp;          권한이 부여되었습니다. (생성 권한 부여)
                                                connect, resource 권한 부여 to 누구
                                                이어서 사용자에 대한 제한 권한 변경(insert 권한부여)
     alter user myjsp default tablespace users quota unlimited on users;   사용자가 변경되었습니다. 
     
     create table std (
         age int,
         addr date 
     );                         테이블이 생성되었습니다.

     desc std2;  생성된 테이블 확인
    
     insert into test2 values ('test1', 'test2');  행 추가

음, 편리한 작업을 위해 클라이언트 도구를 추가 설치하자. 
https://www.oracle.com/tools/downloads/sqldev-downloads.html 
SQL Developer 21.4.1 Downloads
Windows 64-bit with JDK 8 included  다운로드  ㄱㄱ
압축 풀고,
sqldeveloper 폴더 > jdbc > lib > `ojdbc8.jar` 파일은 이후 이클립스에서 오라클로 
sqldeveloper 폴더 내 sqldeveloper.exe 실행 

새로운 DB생성 (초록색 + ) 
Name : JSP
사용자 이름 : myjsp
비밀번호 : myjsp
아래 세부정보는 기존에 했던 'SID'가 아닌, '서비스 이름' 선택 후 `XEPDB1` 입력, 테스트 및 접속
(추가로 동일하게 SYS, HR도 생성할 것, 나중에 편리하게 사용할 수 있다.)
select * 
from test2;


cmd > net start |findstr Oracle*
설치된 오라클 관련 서비스 목록 나열

services.msc  >  Oracle 관련 서비스들 확인할 수 있음.

웹은 어떻게 통신하느냐 
바탕화면에 '01강.pdf' 를 자세히 살펴볼 것

JSP는 자바와 


웹 페이지를 연결할 때 눈에 보이는 전체적인 틀을 만들어 주는 게 'html'
F12를 누르면 많은 텍스트들이 나오는데, 이 텍스트들을 전달하고 전달받는다.
서버로부터 전달받은 html파일을 클라이언트의 인터넷 브라우저에서 실행하게 되면 
우리가 보는 웹 페이지를 볼 수 있게 된다. 단지 표시해주는 것뿐이다.
응답받은 결과를 그대로 보여지도록 하는 도구가 톰캣이다.


톰캣을 다운받자.
https://tomcat.apache.org/download-90.cgi
Tomcat 9 Software Downloads
`zip (pgp, sha512)` 다운로드 및 압축 해제

# C:\apache-tomcat-9.0.56\conf  > context.xml 우클릭 후 편집 

<Context> 를 `<Context privileged="true">` 로 수정 (19번째 줄)

# C:\apache-tomcat-9.0.56\conf > server.xml 우클 후 편집 

<Connector port="8080" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443"/>    이 내용을 아래 내용처럼 추가할 것 (69번째 줄)

<Connector port="8080" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443"  URIEncoding="UTF-8"/>


`bin`이라는 폴더는 실행할 명령들이 들어있는 폴더라고 보면 된다.
C:\apache-tomcat-9.0.56\bin  >>  `*.bat` 검색해서 bat파일 확인
`startup.bat` 우클릭하여 실행, 실행이 안될 경우,

cmd > netstat - ano |findstr 8080 엔터 (네트워크 상태를 보여주는 명령어)
cd c:\apache-tomcat-9.0.56\bin 엔터
dir *.bat 엔터 (디렉토리 리스트 .bat 파일의)
`startup.bat` 엔터 (새로운 dos창이 나오면 잘 실행되는 것))
 (아래의 내용은 tomcat이 실행될 때 환경변수이다. 수정도 가능하다.)

Using CATALINA_BASE:   "c:\apache-tomcat-9.0.56"
Using CATALINA_HOME:   "c:\apache-tomcat-9.0.56"
Using CATALINA_TMPDIR: "c:\apache-tomcat-9.0.56\temp"
Using JRE_HOME:        "C:\Program Files\Java\jdk1.8.0_311"
Using CLASSPATH:       "c:\apache-tomcat-9.0.56\bin\bootstrap.jar;c:\apache-tomcat-9.0.56\bin\tomcat-juli.jar"
Using CATALINA_OPTS:   ""

인터넷 창 하나 열어서, url 입력란에 'http://localhost:8080/' 엔터 눌러서 tomcat에 연결되면
tomcat은 문제 없이 잘 구동된다는 것

(netstat 네트워크 상태정보를 보여주는 명령어)
netstat - ano |findstr 8080 엔터 (time_wait 이 0이면 동작하지 않는 상태)
shutdown.bat
netstat - ano |findstr 8080 엔터 


이클립스로 돌아가자.
아래에 `Servers` 클릭 > 아래 링크 클릭 
Apache > Tomcat v9.0 Server 클릭 > 다시 `Servers` 클릭 후 Tomcat v9.0 우클릭 후 `Start`

왼쪽 `Server` > Tomcat v9.0 Server at localhost-config >
context.xml 과 server.xml 에서 아까 수정된 내용을 Source에서 확인할 수 있다.


* 웹 어플리케이션의 장점
- 사용자 : 별도의 설치 없이 프로그램을 사용할 수 있기 때문에 접근성이 용이
- 개발자 : 사용자용 프로그램을 별도로 제작하지 않고, html을 이용하여 사용자 UI를 구축하기 때문에,
           개발에 소요되는 시간과 노력이 줄어듬

* JSP 웹 어플리케이션의 장점
1. 풍부한 java API를 사용하여 제작됨
   (API 어플리케이션 프로그램 인터페이스, 서버 내에 구현되어 있는 기능)
2. JSP기반의 웹 어플리케이션은 특정 운영체제가 아니더라도 호환성의 문제가 없음.
3. 실제 코드가 프로그램에서 노출되지 않기 때문에 보안상의 장점이 있음.

APM 을 사용해서 웹 개발을 한다.
- Apache(웹서버), IIS, ...
- PHP(서버스크립트 = 서버 프로그램 언어, 어플리케이션 개발 언어), C,C++,Python,Perl,Java,Ruby ...
- MySQL(DB), MariaDB, Oracle ...

JSP는 Apache, java, DB중 하나를 사용한다. 

URI (URL보다 큰 개념)
--- URL : http://192.110.32.11:8080/
 |- URN : 특정 데이터 뿐만아니라 포괄적으로 

URL 의 구조
 1. 프로토콜(Protocol) : 네트워크 상에서 약속한 통신규약 
                        (http, ftp, smtp, pop. DHCP,
                         https = http Secure, 상위의 내용을 암호화한다.)

 2. IP주소 : 네트워크 상에서 특정 컴퓨터를 식별할 수 있는 주소 (192.110.32.11)
 3. Port번호 : IP주소가 컴퓨터를 식별할 수 있게 해준다면,
               포트번호는 해당 컴퓨터의 구동되고 있는 프로그램을 구분할 수 있는 번호.

 4. DNS(도메인) : IP주소를 사람이 쉽게 외우도록 맵핑한 문자열
  
예)  http : // www.google.com : 80 / index.html
   protocol,      DNS(도메인)   port     경로


cmd > netstat -ano 엔터
 구동중인 서비스 목록 나열
 포트번호 1521은 Eclipse,
         3306은 MySQL 또는 MariaDB,
         8080은 톰캣

웹서버는 html이라는 정적데이터(데이터를 표시해주는)와, Container라는 동적데이터를 다룬다.
주로 Container에 의해 DB와 연동되어 
id/pw 입력창은 html로 구성되고, 입력을 하면 그 내용을 서버에 전달
전달받은 내용을 Container에 넣고 일치 여부를 확인하는데, DB에 요청(Query)한다.
DB의 응답(result)를 받고, 그 내용을 받은 웹서버는 다시 사용자에게 html로 응답하게 된다.
Container에서 동작하여 나온 결과를 정적데이터 html로 사용자에게 전달하는 원리이다.
브라우저는 이 응답페이지를 해석(랜더링)하여 화면에 보여준다.



JSP (Java Server Pages)     /  JSP > html > java코드 (모두 JSP안에 포함된다.)

- JSP는 html페이지를 만들기 위한 방법 중 하나이다.
- JSP는 사용자가 코드를 작성한 다음 컴파일 과정을 거치지 않고 서버에서 실행시킬 수 있다.
- JSP는 웹 서버에 의해 서블릿으로 변환된 다음 실행된다.

* Java Servlets 
- 서블릿은 서버에서 실행되는 자바 프로그램이다.
- 서블릿이 사용자에 의해 요청되면 서버에서는 http request에 응답하기 위해
  웹 서버에서 서블릿 객체를 생성하고 이를 통해 사용자의 요청을 처리한다.


* 웹 프로그래밍을 하기 위해 필요한 학습
1. JAVA : Java웹 어플리케이션을 구현하기 위한 선행 학습
2. HTML : 웹 어플리케이션을 구현하기 위한 틀
3. CSS : 웹 어플리케이션의 레이아웃 및 스타일을 지정하는 언어
4. JavaScript : 클라이언트의 기능/동작을 구현하기 위한 언어
(JavaScript에 치중하면 그거를 프론트엔드라고 한다. 
 주로 텍스트정보를 서버에 전달하고, 서버로부터 전달받은 내용을 정리해서
 화면에 보여지는 부분에 치중한다.)

이클립스로 가서 프로젝트를 하나 만들자. 'HTML'
File > New > Dynamic Web Project 클릭하여 프로젝트 생성
JRE System Library 우클릭 > Properties > `JavaSE-1.8` 로 변경
생성된 프로젝트 우클릭 > Properties 클릭 > Resource > Other : UTF-8 로 설정

window > Proferences > `encoding` 검색 > Workspace > Text file encoding > UTF-8 로 설정
window > Proferences > Context Types > Default encoding을 utf-8로 설정
window > Proferences > CSS, HTML, JSP, XML files 모두 utf-8로 설정 
window > Proferences > General > Web Browser > Chrome 체크 

프로젝트 우클릭 > new > HTML file 'First.html', 'image.html' 파일 생성






vi ~/.bash_profile
export JAVA_HOME=(경로)



정보처리기사, 
빅데이터 분석기사
ADsP 
무엇보다 성실함, 자신감, 포트폴리오 준비


